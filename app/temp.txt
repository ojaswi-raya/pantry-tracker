'use client'
import Image from "next/image";
import { useState, useEffect } from "react";
import { firestore } from "@/firebase";
import { Box, Modal, Typography, Stack, TextField, Button } from "@mui/material";
import { getDocs, deleteDoc } from "firebase/firestore";
import { collection, doc, getDoc, query, setDoc } from "firebase/firestore";

export default function Home() {
  const [inventory, setInventory] = useState([])
  const [open, setOpen] = useState(false)
  const [itemName, setItemName] = useState('')

  const updateInventory = async () => {
    const snapshot = query(collection(firestore, 'pantry'))
    const docs = await getDocs(snapshot)
    const inventoryList = []
    docs.forEach((doc)=>{
      inventoryList.push({
        name: doc.id,
        ...doc.data()
      })
    })
    setInventory(inventoryList)
  }

  const removeItem = async (item) => {
    const docRef = doc(collection(firestore, 'pantry'), item)
    const docSnap = await getDoc(docRef)
    if (docSnap.exists()) {
      const {quantity} = docSnap.data()
      if (quantity === 1) {
        await deleteDoc(docRef)
      }
      else {
        await setDoc(docRef, {quantity: quantity-1})
      }
    }

    await updateInventory()
  }

  const addItem = async (item) => {
    const docRef = doc(collection(firestore, 'pantry'), item)
    const docSnap = await getDoc(docRef)
    if (docSnap.exists()) {
      const {quantity} = docSnap.data()
      await setDoc(docRef, {quantity: quantity + 1})
    } else {
      await setDoc(docRef, {quantity: 1})
    }

    await updateInventory()
  }

  useEffect(()=>{
    updateInventory()
  }, [])

  const handleOpen = () => setOpen(true)
  const handleClose = () => setOpen(false)

  return (
    <Box 
      width="100vw" 
      height="100vh" 
      display="flex"
      flexDirection="column"
      justifyContent="center" 
      alignItems="center"
      gap={2}
    >
      <Modal open={open} onClose={handleClose}>
        <Box
          position="absolute"
          top="50%"
          left="50%"
          width={400}
          bgcolor="white"
          border="2px solid #000"
          boxShadow={24}
          p={4}
          display="flex"
          flexDirection="column"
          gap={3}
          sx={{
            transform: "translate(-50%, -50%)"
          }}
        >
          <Typography variant="h6">Add Item</Typography>
          <Stack width="100%" direction="row" spacing={2}>
            <TextField
            variant="outlined"
            fullWidth
            value={itemName}
            onChange={(e)=>{
              setItemName(e.target.value)
            }}
            />
            <Button
              variant="outlined"
              onClick={()=>{
                addItem(itemName)
                setItemName('')
                handleClose()
              }}
            >
              Add
            </Button>
          </Stack>
        </Box>
      </Modal>
      <Button 
        variant="contained" 
        onClick={()=>{
          handleOpen()
        }}
      >
        Add New Item
      </Button>
      <Box border='1px solid #333'>
        <Box
          width="800px"
          height="100px"
          bgcolor="#ADD8E6"
          display="flex"
          alignItems="center"
          justifyContent="center"
        >
          <Typography variant="h2" color="#333">
            Inventory Items
          </Typography>
        </Box>
      
        <Stack
          width="800px"
          height="300px"
          spacing={2}
          overflow="auto"
        >
          {
            inventory.map(({name, quantity})=>(
              <Box 
                key={name} 
                width="100%" 
                minHeight="150px"
                display="flex"
                alignItems="center"
                justifyContent="space-between"
                bgcolor="#f0f0f0"
                padding={5}
              >
                <Typography variant='h3' color='#333' textAlign="center">
                  {name.charAt(0).toUpperCase() + name.slice(1)}
                </Typography>
                <Typography variant='h3' color='#333' textAlign="center">
                  {quantity}
                </Typography>
                <Stack direction="column" spacing={2}>
                  <Button variant='outlined' onClick={()=>{
                    addItem(name)
                  }}>
                    +
                  </Button>
                  <Button variant='outlined' onClick={()=>{
                    removeItem(name)
                  }}>
                    -
                  </Button>
                </Stack>
              </Box>
            ))
          }
        </Stack>
      </Box>
    </Box>
  )
}

-----------------

'use client'
import { firestore } from "@/firebase"
import { useState, useEffect } from "react"
import { getDocs, deleteDoc, doc, getDoc, collection, setDoc, query } from "firebase/firestore"
import { Box, Container, Modal, Typography, Stack, TextField, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, IconButton, responsiveFontSizes } from "@mui/material"
import AddIcon from '@mui/icons-material/Add';
import RemoveIcon from '@mui/icons-material/Remove';
import EditIcon from '@mui/icons-material/Edit';
import { useTheme } from "@mui/material/styles"

export default function Home() {
  const [inventory, setInventory] = useState([])
  const [open, setOpen] = useState(false)
  const [itemName, setItemName] = useState('')
  const theme = useTheme();

  const tableCellStyle = {
    header: {
      fontSize: '1.1rem', 
      fontWeight: 'bold',
      color: '#FFFFFF', 
      backgroundColor: theme.palette.secondary.main
    },
    body: {fontSize: '1rem'}
  }

  return (
    <Container>
      <Box sx={{ textAlign: 'center', m: 2, mt:4}}>
        <Typography variant="h5">Pantry Tracker</Typography>
        <Typography color='secondary' variant="h6">Track your items with ease âœ¨</Typography>
      </Box>
      <Box sx={{display:'flex', flexDirection: 'column', alignItems: 'center'}}>
        <Box>
          <Button variant="outlined" sx={{mt: 2, mb: 0.5, color: 'text.primary', borderColor: 'text.primary'}}>
            Add New Item
          </Button>
        </Box>
        <TableContainer component={Paper} sx={{maxWidth:600, m:'0 auto', mt:2}}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell sx={tableCellStyle.header}>Item</TableCell>
                <TableCell align="right" sx={tableCellStyle.header}>Quantity</TableCell>
                <TableCell align="right" sx={tableCellStyle.header}> </TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell sx={tableCellStyle.body}>Gojo</TableCell>
                <TableCell align="right" sx={tableCellStyle.body}>1</TableCell>
                <TableCell align="right" sx={tableCellStyle.body}>
                  <IconButton><AddIcon/></IconButton>
                  <IconButton><RemoveIcon/></IconButton>
                  <IconButton><EditIcon/></IconButton>
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
      </Box>
    </Container>
  )
}
